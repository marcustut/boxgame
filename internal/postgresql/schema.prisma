generator client {
  provider = "go run github.com/prisma/prisma-client-go"
  output   = "."
  package  = "postgresql"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:%3C5%3D%3DjJ%5Bn%7D%60L%3Bf%2Ctp@db.vfqzgsbgmlvglbygosna.supabase.co:6543/postgres?pgbouncer=true"
}

model User {
  id          String        @id @db.Uuid
  username    String        @unique
  createdAt   DateTime      @default(now())
  updatedAt   DateTime
  teamId      String?       @db.Uuid
  email       String        @unique
  profileId   String        @unique @db.Uuid
  profile     Profile       @relation(fields: [profileId], references: [id])
  team        Team?         @relation(fields: [teamId], references: [id])
  comment     Comment[]
  commentLike CommentLike[]
  post        Post[]
  like        PostLike[]
  userRole    UserRole[]
}

model Post {
  id         String     @id @db.Uuid
  content    String
  images     String[]
  created_at DateTime   @default(now())
  updated_at DateTime
  userId     String     @db.Uuid
  user       User       @relation(fields: [userId], references: [id])
  comment    Comment[]
  like       PostLike[]
}

model Comment {
  id          String        @id @db.Uuid
  content     String
  created_at  DateTime      @default(now())
  updated_at  DateTime
  userId      String        @db.Uuid
  postId      String        @db.Uuid
  post        Post          @relation(fields: [postId], references: [id])
  user        User          @relation(fields: [userId], references: [id])
  commentLike CommentLike[]
}

model PostLike {
  postId String @db.Uuid
  userId String @db.Uuid
  post   Post   @relation(fields: [postId], references: [id])
  user   User   @relation(fields: [userId], references: [id])

  @@id([postId, userId])
}

model CommentLike {
  commentId String  @db.Uuid
  userId    String  @db.Uuid
  comment   Comment @relation(fields: [commentId], references: [id])
  user      User    @relation(fields: [userId], references: [id])

  @@id([commentId, userId])
}

model Profile {
  id            String          @id @db.Uuid
  status        PastoralStatus?
  gender        Gender
  nameEng       String
  contact       String
  dob           DateTime
  tngReceiptUrl String?
  avatarUrl     String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime
  invitedBy     String?
  addressId     String?         @db.Uuid
  satellite     Satellite?
  nameChi       String?
  address       Address?        @relation(fields: [addressId], references: [id])
  user          User?
}

model Address {
  id         String    @id @db.Uuid
  city       String
  line1      String
  line2      String?
  state      String
  country    String
  postalCode String
  profile    Profile[]
}

model Team {
  id          String        @id @db.Uuid
  name        String?
  color       String        @unique
  points      Float         @default(0)
  clusterId   String?       @db.Uuid
  cluster     Cluster?      @relation(fields: [clusterId], references: [id])
  teamMission TeamMission[]
  members     User[]
}

model TeamMission {
  teamId    String  @db.Uuid
  missionId String  @db.Uuid
  mission   Mission @relation(fields: [missionId], references: [id])
  team      Team    @relation(fields: [teamId], references: [id])

  @@id([teamId, missionId])
}

model Cluster {
  id    String @id @db.Uuid
  name  String @unique
  color String @unique
  teams Team[]
}

model Mission {
  id          String        @id @db.Uuid
  title       String        @unique
  description String?
  points      Float
  createdAt   DateTime      @default(now())
  updatedAt   DateTime
  teamMission TeamMission[]
}

model UserRole {
  id     String @id @db.Uuid
  role   Role
  userId String @db.Uuid
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([userId, role])
}

enum Role {
  PLAYER
  TEAMLEADER
  CLUSTERLEADER
  CREW
}

enum PastoralStatus {
  PASTOR
  SCGL
  CGL
  PCGL
  ACGL
  OM
  NB
  NF
}

enum Gender {
  MALE
  FEMALE
}

enum Satellite {
  FGASETAPAK
  FGARAWANG
  FGAPUCHONG
  FGAPJ
  FGAUSJ
}

generator client {
  provider = "go run github.com/prisma/prisma-client-go"
  output   = "."
  package  = "postgresql"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:EEmc~]szAE4tuXR-@db.gnbavzhblfvrsopphqja.supabase.co:5432/postgres"
}

model User {
  id        String     @id @db.Uuid
  username  String     @unique
  name      String
  contact   String?
  dob       DateTime?
  createdAt DateTime   @default(now())
  updatedAt DateTime
  teamId    String?    @db.Uuid
  team      Team?      @relation(fields: [teamId], references: [id])
  UserRole  UserRole[]
}

model Team {
  id          String        @id @db.Uuid
  name        String?
  color       String        @unique
  points      Float         @default(0)
  clusterId   String?       @db.Uuid
  cluster     Cluster?      @relation(fields: [clusterId], references: [id])
  members     User[]
  TeamMission TeamMission[]
}

model TeamMission {
  teamId    String  @db.Uuid
  team      Team    @relation(fields: [teamId], references: [id])
  missionId String  @db.Uuid
  mission   Mission @relation(fields: [missionId], references: [id])

  @@unique([teamId, missionId])
}

model Cluster {
  id    String @id @db.Uuid
  name  String @unique
  color String @unique
  teams Team[]
}

model Mission {
  id          String        @id @db.Uuid
  title       String        @unique
  description String?
  points      Float
  createdAt   DateTime      @default(now())
  updatedAt   DateTime
  TeamMission TeamMission[]
}

model UserRole {
  id      String @id @db.Uuid
  user_id String @db.Uuid
  role    Role
  User    User   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, role])
}

enum Role {
  PLAYER
  TEAMLEADER
  CLUSTERLEADER
  CREW
}

generator client {
  provider = "go run github.com/prisma/prisma-client-go"
  output   = "."
  package  = "postgresql"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:EEmc~]szAE4tuXR-@db.gnbavzhblfvrsopphqja.supabase.co:6543/postgres"
}

model User {
  id        String     @id @db.Uuid
  username  String     @unique
  email     String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime
  profileId String     @unique @db.Uuid
  profile   Profile    @relation(fields: [profileId], references: [id])
  teamId    String?    @db.Uuid
  team      Team?      @relation(fields: [teamId], references: [id])
  userRole  UserRole[]
}

model Profile {
  id            String         @id @db.Uuid
  status        PastoralStatus
  gender        Gender
  name          String
  contact       String
  dob           DateTime
  tngReceiptUrl String?
  avatarUrl     String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime
  addressId     String?        @db.Uuid
  address       Address?       @relation(fields: [addressId], references: [id])
  user          User[]
}

model Address {
  id         String    @id @db.Uuid
  city       String
  line1      String
  line2      String?
  state      String
  country    String
  postalCode String
  profile    Profile[]
}

model Team {
  id          String        @id @db.Uuid
  name        String?
  color       String        @unique
  points      Float         @default(0)
  clusterId   String?       @db.Uuid
  cluster     Cluster?      @relation(fields: [clusterId], references: [id])
  teamMission TeamMission[]
  members     User[]
}

model TeamMission {
  teamId    String  @db.Uuid
  missionId String  @db.Uuid
  mission   Mission @relation(fields: [missionId], references: [id])
  team      Team    @relation(fields: [teamId], references: [id])

  @@unique([teamId, missionId])
}

model Cluster {
  id    String @id @db.Uuid
  name  String @unique
  color String @unique
  teams Team[]
}

model Mission {
  id          String        @id @db.Uuid
  title       String        @unique
  description String?
  points      Float
  createdAt   DateTime      @default(now())
  updatedAt   DateTime
  teamMission TeamMission[]
}

model UserRole {
  id     String @id @db.Uuid
  userId String @db.Uuid
  role   Role
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([userId, role])
}

enum Role {
  PLAYER
  TEAMLEADER
  CLUSTERLEADER
  CREW
}

enum PastoralStatus {
  PASTOR
  SCGL
  CGL
  PCGL
  ACGL
  OM
  NB
  NF
}

enum Gender {
  MALE
  FEMALE
}
